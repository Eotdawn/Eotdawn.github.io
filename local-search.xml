<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>常用工具命令</title>
    <link href="/2022/06/26/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%91%BD%E4%BB%A4/"/>
    <url>/2022/06/26/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo常用命令"><a href="#Hexo常用命令" class="headerlink" title="Hexo常用命令"></a>Hexo常用命令</h1><ul><li>hexo init 初始化hexo博客</li><li>hexo g 生成静态文件</li><li>hexo clean 清除缓存文件(db.json)和已生成的静态文件 (public)</li><li>hexo s 在本地启动服务器</li><li>hexo d 部署网站</li><li>hexo new post “(填入标题)” 发布新文章</li><li>hexo new page “(填入标题)” 发布新页面</li></ul><h1 id="git常用命令"><a href="#git常用命令" class="headerlink" title="git常用命令"></a>git常用命令</h1><ul><li>git init 将当前目录配置为git仓库</li><li>git add xxx 将xxx文件添加到暂存区 </li><li>git rm –cached xx 将文件从仓库索引目录删除</li><li>git commit -m “备注信息” 将暂存区内容提交到当前分支</li><li>git status 查看当前仓库状态</li><li>git log 查看当前分支的所以版本</li><li>git reflog 查看HEAD指针指针的移动历史</li><li>git reset –hard HEAD 版本号\^\^^ 回滚到版本号的版本\上一个版本\上两个版本</li><li>git restore xx 将xx文件从暂存区中删除</li><li>git push 将当前分支推送到远程仓库</li><li>git clone <a href="mailto:&#x67;&#105;&#116;&#x40;&#103;&#105;&#x74;&#x2e;&#x61;&#x63;&#119;&#x69;&#110;&#103;&#x2e;&#99;&#x6f;&#109;">&#x67;&#105;&#116;&#x40;&#103;&#105;&#x74;&#x2e;&#x61;&#x63;&#119;&#x69;&#110;&#103;&#x2e;&#99;&#x6f;&#109;</a>:xxx&#x2F;XXX.git 将远程仓库XXX下载到当前目录下</li><li>git branch 查看所有分支和当前所处分支</li><li>git branch branch_name 创建新分支</li><li>git checkout branch_name 切换到branch_name这个分支</li><li>git merge branch_name 将分支branch_name合并到当前分支上</li><li>git branch -d branch_name 删除本地仓库的branch_name分支</li><li>git push -d origin branch_name：删除远程仓库的branch_name分支</li><li>git pull：将远程仓库的当前分支与本地仓库的当前分支合并</li></ul><h1 id="docker常用命令"><a href="#docker常用命令" class="headerlink" title="docker常用命令"></a>docker常用命令</h1><ul><li>docker images 列出本地所以镜像</li><li>docker image rm xxx 删除xxx镜像</li><li>docker commit xxx IMAGE_NAME:TAG 创建xxx容器的镜像</li><li>docker save -o xxx.tar IMAGE_NAME:TAG 将镜像导出到本地文件</li><li>docker load -i xxx.tar 将本地文件中镜像的加载出来</li><li>docker create -it xxx 利用镜像xxx创建一个容器</li><li>docker ps -a 查看本地的所有容器</li><li>docker start xxx 启动xxx容器</li><li>docker stop xxx 停止xxx容器</li><li>docker restart xxx 重启xxx容器</li><li>docker run -itd xxx 创建并启动一个xxx容器</li><li>docker attach xxx 进入xxx容器</li><li>docker rm xxx 删除xxx容器</li><li>docker stats 查看所有容器的统计信息，包括CPU、内存、存储、网络等信息</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>tool</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
